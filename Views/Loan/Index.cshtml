@model IEnumerable<Library.Models.Loan>

<h1 class="mb-3">Loans</h1>
<hr />

@if (!Model.Any())
{
    <p>No loans found.</p>
}
else
{
    <a asp-route="loanCreate" class="btn btn-primary my-3"><i class="bi bi-plus-circle"></i> Create New Loan</a>
    <div class="row row-cols-1 row-cols-md-2 g-4">
    @foreach (var item in Model.OrderBy(q => q.DueDate))
    {
        <div class="col">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">@item.Book.Title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Borrowed by: @item.User.Name</h6>
                    <p class="card-text">
                        <strong>Loan Date:</strong> @item.LoanDate.ToShortDateString()<br />
                        <strong>Due Date:</strong> @item.DueDate.ToShortDateString()<br />
                        <strong>Return Date:</strong> @(item.ReturnDate.HasValue ? item.ReturnDate.Value.ToShortDateString() : "Not returned")
                    </p>                   
                    @if (!item.ReturnDate.HasValue && item.DueDate < DateTime.Now)
                    {
                        <div class="alert alert-danger" role="alert">
                            Days overdue @((DateTime.Now - item.DueDate).Days)
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <a asp-route="loanEdit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary"><i class="bi bi-pencil"></i> Edit</a>
                    <a asp-route="loanDetails" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info"><i class="bi bi-info-circle"></i> Details</a>
                    <a asp-route="loanDelete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i> Delete</a>
                    
                    @if (!item.ReturnDate.HasValue)
                    {
                        <form asp-action="Return" asp-controller="Loan" method="post" style="display: inline;">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-sm btn-success">
                                <i class="bi bi-check-circle"></i> Return
                            </button>
                        </form>

                        @if (item.DueDate < DateTime.Now)
                        {
                            <form asp-action="SendOverdueNotification" asp-controller="Loan" method="post" style="display: inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-sm btn-warning">
                                    <i class="bi bi-check-circle"></i> Notify
                                </button>
                            </form>
                        }
                    }
                </div>
            </div>
        </div>
    }
    </div>
}